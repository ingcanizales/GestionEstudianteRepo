@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using EstudiantesCore.Dtos
@using EstudiantesCore.Entidades
@using DevExtreme.AspNet.Mvc


<div class="mb-3">
    @(Html.DevExtreme().Button().OnClick("EsconderFormulario").Text("Volver").Icon("arrowleft").Type(ButtonType.Default))
</div>

@(Html.DevExtreme().Form<Estudiante>
    ()
    .ID("FormEstudiante")
    .ColCount(12)
    .Items(items =>
    {

    items.AddSimpleFor(g => g.TipoDocumento).ColSpan(4)
    .ValidationRules(s => s.AddRequired().Message("Campo requerido"))
    .Label(d => d.Location(FormLabelLocation.Top).Text("Tipo de documento"))
    .Editor(f => f.SelectBox().Placeholder("Seleccione su tipo de documento").DisplayExpr("Nombre")
    .DataSource(d => d.RemoteController().LoadUrl("/Estudiantes?handler=TipoDocumento").Key("Id")));


    items.AddSimpleFor(m => m.Documento).ColSpan(4)
    .Label(d => d.Location(FormLabelLocation.Top).Text("Documento"))
    .ValidationRules(v => v.AddRequired().Message("El documento es requerido"))
    .ValidationRules(f => f.AddNumeric().Message("Solo se permiten números"))
    .ValidationRules(g => g.AddAsync().ValidationCallback(" DocumentoUnico").Message("Ya existe un usuario registrado con este documento"))
    .Editor(s => s.TextBox().MaxLength(20));


    items.AddSimpleFor(m => m.Nombre)
    .ValidationRules(v => v.AddRequired().Message("El nombre es requerido"))
    .Label(f => f.Location(FormLabelLocation.Top)
    .Text("Nombres")).ColSpan(4)
    .Editor(d => d.TextBox().MaxLength(100));

    items.AddSimpleFor(m => m.Apellido).ColSpan(4)
    .ValidationRules(v => v.AddRequired().Message("El apellido es requerido"))
    .Label(f => f.Location(FormLabelLocation.Top)
    .Text("Apellidos"))
    .Editor(d => d.TextBox().MaxLength(100));


    items.AddSimpleFor(g => g.Sexo).ColSpan(4)
    .ValidationRules(s => s.AddRequired().Message("Campo requerido"))
    .Label(d => d.Location(FormLabelLocation.Top).Text("Sexo"))
    .Editor(f => f.SelectBox().DataSource(d => d.Array()
    .Data(new List<string>
        () { "M", "F" })));


        items.AddSimpleFor(f => f.FechaNacimiento).ColSpan(4)
        .Label(d => d.Location(FormLabelLocation.Top).Text("Fecha de nacimiento"))
        .ValidationRules(s => s.AddRequired().Message("Campo requerido"))
        .Editor(f => f.DateBox().Max(DateTime.Now).DateSerializationFormat("yyyy-MM-dd").DisplayFormat("dd/MM/yyyy"));

        items.AddSimpleFor(m => m.Email).ColSpan(4)
        .ValidationRules(v => v.AddRequired().Message("El email es requerido"))
        .ValidationRules(g => g.AddEmail().Message("Ingrese un email valido"))
        .Label(f => f.Location(FormLabelLocation.Top)
        .Text("Email"))
        .Editor(d => d.TextBox().MaxLength(200));

        items.AddSimpleFor(m => m.Telefono).ColSpan(4)
        .ValidationRules(v => v.AddRequired().Message("El telefono es requerido"))
        .ValidationRules(g => g.AddNumeric().Message("Solo se permiten números"))
        .Label(f => f.Location(FormLabelLocation.Top)
        .Text("Telefono"))
        .Editor(d => d.TextBox().MaxLength(20));

        items.AddSimpleFor(m => m.Direccion).ColSpan(4)
        .ValidationRules(v => v.AddRequired().Message("El telefono es requerido"))
        .Label(f => f.Location(FormLabelLocation.Top)
        .Text("Dirección"))
        .Editor(d => d.TextArea().MaxLength(500));

        items.AddSimpleFor(f => f.FechaIngreso).ColSpan(4)
        .Label(d => d.Location(FormLabelLocation.Top).Text("Fecha de ingreso"))
        .ValidationRules(s => s.AddRequired().Message("Campo requerido"))
        .Editor(f => f.DateBox().Max(DateTime.Now).DateSerializationFormat("yyyy-MM-dd").DisplayFormat("dd/MM/yyyy"));


        items.AddEmpty().ColSpan(4);

        items.AddButton().ColSpan(4).VerticalAlignment(VerticalAlignment.Bottom).ButtonOptions(s => s.Icon("save").ID("btnsalvar").Type(ButtonType.Default).OnClick("Salvar").Text("Guardar"));
        })

        )
